/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (-0.5 0 0)   //0
    (0.5 0 0)    //1
    (-0.5 2 0)   //2
    (0.5 2 0)    //3

    (-8 2 0)  //4
    (8 2 0)  //5
    (-8 42 0) //6
    (8 42 0)  //7

    (-0.5 42 0) //8
    (0.5 42 0)  //9
    (-0.5 44 0) //10
    (0.5 44 0)  //11

    // Z
    (-0.5 0 0.1)   //0
    (0.5 0 0.1)    //1
    (-0.5 2 0.1)   //2
    (0.5 2 0.1)    //3

    (-8 2 0.1)  //4
    (8 2 0.1)  //5
    (-8 42 0.1) //6
    (8 42 0.1)  //7

    (-0.5 42 0.1) //8
    (0.5 42 0.1)  //9
    (-0.5 44 0.1) //10
    (0.5 44 0.1)  //11    
);

blocks
(
    // inlet block
    hex (0 1 3 2 12 13 15 14) (20 40 1) simpleGrading (1 1 1)

    // reactor block 1
    hex (4 2 8 6 16 14 20 18) (150 800 1) 
    simpleGrading 
    (
        1 
        1
        1
    )

    // reactor block 2
    hex (2 3 9 8 14 15 21 20) (20 800 1) 
    simpleGrading 
    (
        1 
        1
        1
    )

    // reactor block 3
    hex (3 5 7 9 15 17 19 21) (150 800 1) 
    simpleGrading 
    (
        1 
        1
        1
    )

    // outlet block
    hex (8 9 11 10 20 21 23 22) (20 40 1) simpleGrading (1 1 1)

);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 1 13 12)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (10 22 23 11)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (2 3 1 0)
            (6 8 2 4)
	    (8 9 3 2)
	    (9 7 5 3)
            (10 11 9 8)
            (12 13 15 14)
            (16 14 20 18)
	    (14 15 21 20)
	    (15 17 19 21)
            (20 21 23 22)
        );
    }

    defaultFaces
    {
        type wall;
        faces ();
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
